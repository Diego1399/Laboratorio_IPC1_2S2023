/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ejemplo8;

import java.awt.Color;
import java.awt.Graphics;

/**
 *
 * @author diego
 */
public class lienzo extends javax.swing.JPanel implements Runnable {

    /**
     * Creates new form lienzo
     */
    private int x = getWidth(); // Coordenada de origen x
    private int y = getHeight(); // Coordenada de origen y
    int contador = 1;
    private Color color;

    Thread hilo;

    private boolean tope;

    public lienzo() {
        initComponents();
        hilo = new Thread(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void paint(Graphics g) {
        // Configuracion del rectangulo de fondo
        // ------------------------------------
        g.setColor(getBackground());

        /*
        Se dibujara el rectangulo en las coordenadas 0,0
        con un ancho del largo del JPANEL
        y una altura del alto del JPANEL
         */
        g.fillRect(0, 0, getWidth(), getHeight());

        // COnfiguracion del circulo
        // ------------------------------------
        g.setColor(color);

        g.fillOval(x, y, 30, 30);
    }

    public void inicio() {
        hilo.start();
    }

    @Override
    public void run() {
        try {
            while (true) {
                this.color = Color.RED;

                if (x == 10 && y == 10) {
                    // Contador para cuando llegue a 0,0
                    contador++;
                }

                while (x <= getWidth() - 40) {
                    // Velocidad de la animacion
                    Thread.sleep(100);
                    // Distancia del objeto a la derecha
                    x += 10;
                    repaint(); // Metodo para redibujar
                }
                
                while (y <= getHeight()- 40) {
                    this.color = Color.GREEN;
                    // Velocidad de la animacion
                    Thread.sleep(100);
                    // Distancia del objeto a la abajo
                    y += 10;
                    repaint(); // Metodo para redibujar
                }
                
                while (x > 10) {
                    this.color = Color.BLUE;
                    // Velocidad de la animacion
                    Thread.sleep(100);
                    // Distancia del objeto a la izquierda
                    x -= 10;
                    repaint(); // Metodo para redibujar
                }
                
                while (y > 10) {
                    this.color = Color.BLUE;
                    // Velocidad de la animacion
                    Thread.sleep(100);
                    // Distancia del objeto a la arriba
                    y -= 10;
                    repaint(); // Metodo para redibujar
                }
                
                System.out.println(contador);
            }
        } catch (Exception e) {
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
