/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ejemplo9;

import java.awt.Graphics;
import java.awt.Image;
import java.util.Random;
import javax.swing.ImageIcon;

/**
 *
 * @author diego
 */
public class panel extends javax.swing.JPanel implements Runnable {

    
    private int x = getWidth();
    private int y = getHeight();
    int limite = 1;
    
    private Image imagen;
    private String imgIzq = "C:\\Users\\diego\\OneDrive\\Documentos\\Ingenieria en Ciencias y Sistemas\\2023\\Segundo Semestre\\Laboratorio_IPC1_2S2023\\Clase 9\\Ejemplo9\\src\\img\\caballo.png";
    private String imgDer = "C:\\Users\\diego\\OneDrive\\Documentos\\Ingenieria en Ciencias y Sistemas\\2023\\Segundo Semestre\\Laboratorio_IPC1_2S2023\\Clase 9\\Ejemplo9\\src\\img\\caballo2.png";
    
    Thread hilo;
    
    private int velocidad;
    
    public panel() {
        initComponents();
        hilo = new Thread(this);
        imagen = new ImageIcon(imgDer).getImage()
                       .getScaledInstance(50,50, Image.SCALE_DEFAULT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void setVelocidad(int distancia){
        Random random = new Random();
        velocidad = random.nextInt(distancia) + 1;
        velocidad *= 1000;
    }
    
    public void vervelocidad() {
        System.out.println("Velocidad: " + velocidad);
    }
    
    public void paint(Graphics g){
        g.setColor(getBackground());
        g.fillRect(0, 0, getWidth(),getHeight());
        g.drawImage(imagen, x, y, this);
    }
    
    public void inicio() {
        hilo.start();
    }
    
    @Override
    public void run() {
        try {
            boolean corriendo = true;
            while (corriendo) {  
                
                if(limite == 1) corriendo = false;
                
                if (x == 50) limite++;
                
                while (x <= getWidth() - 60) { 
                    
                    imagen = new ImageIcon(imgDer).getImage()
                       .getScaledInstance(50,50, Image.SCALE_DEFAULT);
                    
                    Thread.sleep(velocidad);
                    
                    x += 10;
                    
                    repaint();
                }
                
                while (x > 10) {                    
                    imagen = new ImageIcon(imgIzq).getImage()
                       .getScaledInstance(50,50, Image.SCALE_DEFAULT);
                    Thread.sleep(velocidad);
                    
                    x -= 10;
                    
                    repaint();
                }
                System.out.println(limite);
            }
        } catch (Exception e) {
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
